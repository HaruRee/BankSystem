/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.banksystem;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author jcxxm
 */
public class Bank extends javax.swing.JFrame {
    private List<BankAccount> accounts = new ArrayList<>();

    /**
     * Creates new form Bank
     */
    public Bank() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AccountsLists = new javax.swing.JComboBox<>();
        Deposit = new javax.swing.JButton();
        Withdraw = new javax.swing.JButton();
        Transfer = new javax.swing.JButton();
        AccDetails = new javax.swing.JButton();
        CreateAcc = new javax.swing.JButton();
        Exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AccountsLists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountsListsActionPerformed(evt);
            }
        });

        Deposit.setText("Deposit");
        Deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositActionPerformed(evt);
            }
        });

        Withdraw.setText("Withdraw");
        Withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WithdrawActionPerformed(evt);
            }
        });

        Transfer.setText("Transfer");
        Transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferActionPerformed(evt);
            }
        });

        AccDetails.setText("View Account Details");
        AccDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccDetailsActionPerformed(evt);
            }
        });

        CreateAcc.setText("Create Account");
        CreateAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Exit)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Transfer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AccDetails))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Deposit)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Withdraw))
                        .addComponent(AccountsLists, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CreateAcc))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(AccountsLists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Deposit)
                    .addComponent(Withdraw))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Transfer)
                    .addComponent(AccDetails))
                .addGap(18, 18, 18)
                .addComponent(CreateAcc)
                .addGap(18, 18, 18)
                .addComponent(Exit)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositActionPerformed
        // TODO add your handling code here:
        String selectedAccountNumber = (String) AccountsLists.getSelectedItem();
    String input = JOptionPane.showInputDialog(this, "Enter deposit amount:");
    double amount = Double.parseDouble(input);
    for (BankAccount account : accounts) {
        if (account.getAccountNumber().equals(selectedAccountNumber)) {
            account.deposit(amount);
            break;
        }
    }
    }//GEN-LAST:event_DepositActionPerformed

    private void WithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WithdrawActionPerformed
        // TODO add your handling code here:
        String selectedAccountNumber = (String) AccountsLists.getSelectedItem();
    String input = JOptionPane.showInputDialog(this, "Enter withdrawal amount:");
    double amount = Double.parseDouble(input);
    for (BankAccount account : accounts) {
        if (account.getAccountNumber().equals(selectedAccountNumber)) {
            account.withdraw(amount);
            break;
        }
    }
    }//GEN-LAST:event_WithdrawActionPerformed

    private void AccDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccDetailsActionPerformed
        // TODO add your handling code here:
        String selectedAccountNumber = (String) AccountsLists.getSelectedItem();
    for (BankAccount account : accounts) {
        if (account.getAccountNumber().equals(selectedAccountNumber)) {
            JOptionPane.showMessageDialog(this, "Account Holder: " + account.getAccountHolderName() +
                    "\nAccount Number: " + account.getAccountNumber() +
                    "\nBalance: " + account.getBalance());
            break;
        }
    }
    }//GEN-LAST:event_AccDetailsActionPerformed

    private void TransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferActionPerformed
        // TODO add your handling code here:
        String selectedAccountNumber = (String) AccountsLists.getSelectedItem();
    String recipientAccountNumber = JOptionPane.showInputDialog(this, "Enter recipient account number:");
    String input = JOptionPane.showInputDialog(this, "Enter transfer amount:");
    double amount = Double.parseDouble(input);
    
    BankAccount sender = null;
    BankAccount recipient = null;
    for (BankAccount account : accounts) {
        if (account.getAccountNumber().equals(selectedAccountNumber)) {
            sender = account;
        }
        if (account.getAccountNumber().equals(recipientAccountNumber)) {
            recipient = account;
        }
        if (sender != null && recipient != null) {
            sender.transfer(recipient, amount);
            break;
        }
    }
    }//GEN-LAST:event_TransferActionPerformed

    private void CreateAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccActionPerformed
        // TODO add your handling code here:
         String accNumber = "ACC" + (accounts.size() + 1); // Generate a new account number
    BankAccount newAccount = new BankAccount(accNumber, "New Account Holder");
    accounts.add(newAccount);
    AccountsLists.addItem(accNumber); // Add account to the dropdown list
    }//GEN-LAST:event_CreateAccActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void AccountsListsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountsListsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccountsListsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AccDetails;
    private javax.swing.JComboBox<String> AccountsLists;
    private javax.swing.JButton CreateAcc;
    private javax.swing.JButton Deposit;
    private javax.swing.JButton Exit;
    private javax.swing.JButton Transfer;
    private javax.swing.JButton Withdraw;
    // End of variables declaration//GEN-END:variables
}
